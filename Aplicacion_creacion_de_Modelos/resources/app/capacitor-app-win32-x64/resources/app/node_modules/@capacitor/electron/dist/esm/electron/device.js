import * as tslib_1 from "tslib";
import { DevicePluginWeb, WebPlugin } from "@capacitor/core";
var webDevice = new DevicePluginWeb();
var DevicePluginElectron = /** @class */ (function (_super) {
    tslib_1.__extends(DevicePluginElectron, _super);
    function DevicePluginElectron() {
        return _super.call(this, {
            name: 'Device',
            platforms: ['electron']
        }) || this;
    }
    DevicePluginElectron.prototype.getInfo = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var info;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, webDevice.getInfo()];
                    case 1:
                        info = _a.sent();
                        return [2 /*return*/, {
                                model: info.model,
                                platform: 'electron',
                                appVersion: '',
                                osVersion: info.osVersion,
                                manufacturer: navigator.vendor,
                                isVirtual: false,
                                batteryLevel: info.batteryLevel,
                                isCharging: info.isCharging,
                                uuid: info.uuid
                            }];
                }
            });
        });
    };
    DevicePluginElectron.prototype.getLanguageCode = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, webDevice.getLanguageCode()];
            });
        });
    };
    return DevicePluginElectron;
}(WebPlugin));
export { DevicePluginElectron };
var Device = new DevicePluginElectron();
export { Device };
//# sourceMappingURL=device.js.map